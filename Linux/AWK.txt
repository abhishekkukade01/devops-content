Awk 

1. we can use awk command to search in file and print content in required formate
2. awk provide most convinient way for file processing than other command

structure of awk command 

awk 'BEGIN{} {} END {}' filename
Begin block execute before file processing 
Action block execute for every line present in the file
End block execute after completing all file processing.
___________________________________________________________________________________________

myfile.txt
ajay manager account 45000
sunil clerk account 25000
varun manager sales 50000
amit manager account 47000
tarun peon sales 15000
deepak clerk sales 23000
sunil peon sales 13000
satvik director purchase 80000 
__________________________________________________________________________________________
Note : Normal command like echo wont work in awk 
      $0 for whole record or line
       $1 for first column  
       $2 for 2nd column 
___________________________________________________________________________________________

print first column in file
awk '{print $0}' myfile.txt
____________________________________________________________________________________________

processing csv file



awk command to print data and  total number of lines
   awk 'BEGIN {c=0;} {print $0 ; c=c+1;} END {print "total number of lines=" c }' myfile.txt


AWK variable 

1) FS -> FS ---> FS denote sepeartor in file , eg  csv. or normal or any symbol or space 
2) NR -> Number of Rows, Row Number. In  awk command NR is used to specify row number. 
         with NR we use only relational operator 
         NR==1, NR!=1 , NR < 1 , NR > 1 , NR <=1 , NR >=1 
3) RS -> row seperator . a symbol or special character which separate row 
4) NF  -> Number of Field/column

note : Never use ; in condition 



___________________________________________________________________________________________

Filter the data with given condition 

1) print only line contining only "manager"
awk '$2=="manager" {print $0}' myfile.txt

2) print only rows greater than 2
  awk 'NR >2 {print $0}' myfile.txt

_____________________________________________________________________________________________


 display record based on search string

we have to specify the search string as  /string/

example
     
     1) display record that contain "erk" string 
         awk ' /erk/{print $0} ' myfile.txt

     2) display record that contain sting "erk" in only second column 
        awk ' $2~/erk/ {print $0}' myfile.txt

______________________________________________________________________________________________

filter data with manupulation

1)print record where sarary greater that 25000 and add 5000 in it 

   awk ' $4> 25000 { $4=$4+5000; print $0}' myfile.txt
___________________________________________________________________________________________________
  awk variable example 
  print the file as it is and below it print total number of rows and column 
   
    awk '{print $0} END { print "total number rows: " NR ; print " total number of column =" NF}' myfile.txt

newfile.csv
apple,banana,mango:cat,dog,cow:table,chair,bottol
 print above file in table formate using RS and FS variable 

awk '{print $0}' RS=":" FS="," newfile.csv 
awk 'BEGIN{RS=":"} {print $0}' FS="," newfile.csv

note: FS and -F plays same role in awk command , -F "," is used after awk and FS="," is used before file name 

__________________________________________________________________________________________________________________________________

 awk if else 
 
   in awk we can use if else block 
   syntax : awk '{ if (){_______} else {________}  } ' myfile.txt

 1) if above table add one more column and if salary is grater that 25000  print blue else red
    awk  '{ if ($4 > 25000) { print $0 "  blue" } else { print $0 "  red"} }' myfile.txt


awk for loop 
  syntax: 
           awk ' BEGIN { for (i=0 ; i< 5; i++) {print " value of i is " i } } ' myfile.txt
 
 echo " CAT DOG RAT LION TIGER " | awk ' {for (i=1; i <= NF; i++ ){ print i ":" $0}}'

______________________________________________________________________________________________________________________________________

 












